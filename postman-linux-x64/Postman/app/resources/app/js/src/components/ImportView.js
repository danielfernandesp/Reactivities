"use strict";(self.webpackChunk_postman_app_renderer=self.webpackChunk_postman_app_renderer||[]).push([[177],{"../../packages/api-design/import/src/components/ImportView.js":function(e,t,s){s.r(t),s.d(t,{default:function(){return j}});var i,o=s("../../node_modules/lodash/lodash.js"),n=s.n(o),a=s("../../node_modules/react/index.js"),l=s("../../node_modules/mobx-react/dist/mobx-react.module.js"),r=s("../../node_modules/mobx/lib/mobx.module.js"),c=s("./js/services/EditorService.js"),m=s("../../packages/api-design/import/src/utils/ImportHelper.js"),p=s("../../packages/api-design/schema-editor/index.js"),d=s("../../packages/api-design/api-design-analytics/index.js"),h=s("./growth/foundation/public/amplitude/AmplitudeService.js"),u=s("./js/stores/SyncStatusStore.js"),f=s("./js/stores/StoreManager.js"),g=s("../../node_modules/@postman/aether/esmLib/src/components/Spinner/Spinner.js"),E=s("../../node_modules/@postman/aether/esmLib/src/components/Text/Text.js"),I=s("../../node_modules/@postman/aether/esmLib/src/components/TextInput/TextInput.js"),v=s("../../node_modules/@postman/aether/esmLib/src/components/Button/Button.js"),T=s("../../node_modules/@postman/aether-icons/esmLib/src/design-system-icons/icon-state-success-fill-small.js"),y=s("../../node_modules/@postman/aether-icons/esmLib/src/design-system-icons/icon-state-fail-fill-small.js"),C=s("../../node_modules/@postman/aether-icons/esmLib/src/design-system-icons/icon-action-search-stroke.js"),b=s("../../packages/api-design/import/src/models/Entity.js"),A=s("../../packages/api-design/import/src/components/EntityContainer.js"),N=s("./js/services/conversion/formats/openapi3.js"),_=s("./js/services/conversion/formats/raml1.js"),P=s("./js/services/conversion/formats/wsdl2.js"),F=s("./js/services/conversion/formats/graphql.js"),S=s("./js/services/conversion/util.js");const R={type:"primary",text:"Import"},O="NON_API_ELEMENT";let j=(0,l.observer)(i=class extends a.Component{constructor(e){var t,s;super(e),this.state={searchText:null,searchableEntities:[],apis:null,collections:null,environments:null,globals:null,others:null,isLoading:null===(t=this.props.controller)||void 0===t||!t.importModalV2Enabled,isImporting:!1,isAPIsSelected:!0,isCollectionsSelected:!0,isEnvironmentsSelected:!0,isOtherSelected:!0,isGlobalsSelected:!0,optionsPreference:{},initialImportCompleted:!(null===(s=this.props.controller)||void 0===s||!s.importModalV2Enabled)}}assignToFolder(e,t,s,i){if(!e.path||"string"!=typeof e.path)return;let o=e.path;if("/"!==o.charAt(0)&&(o="/"+o),t.has(o))return;let a=o.split("/"),l=a[a.length-1],r=new b.default({kind:"file",path:o,name:l,content:e.content,language:e.language,isSelected:s,isRootCandidate:i});this.state.searchableEntities.push(r),a.splice(a.length-1),0===a.length&&a.unshift("/");let c="";for(let e of a){const i=("/"===c?"":c)+"/"+e;let o;if(t.has(i)?o=t.get(i):(o=new b.default({kind:"folder",name:e,path:i,isSelected:s}),this.state.searchableEntities.push(o),t.set(i,o)),""!==c){let e=t.get(c),s=n().map(e.items,(e=>e.path));n().includes(s,o.path)||(e.items.push(o),o.setParent(e))}c=i}let m=t.get(c);m.items.push(r),r.setParent(m),t.set(r.path,r)}async getConfigurationsForAPIEntity(){const e={openapi:N.default,raml:_.default,wsdl:P.default,graphql:F.default},t={};for(const s in e){const i=e[s],o=n().filter(await i.getOptions({moduleVersion:(0,S.getConverterVersion)("import")}),"external"),a=n().reduce(o,((e,t)=>(e[t.id]=t.default,e)),{}),l=n().assign({},a,this.state.optionsPreference[s]);l.parametersResolution&&(l.requestParametersResolution=l.parametersResolution,l.exampleParametersResolution=l.parametersResolution),t[s]=l}return t}componentDidMount(){(0,r.when)((()=>this.props.controller.isProcessingComplete),(()=>{const e=this.props.controller.files,t=new b.default,s=new b.default,i=new b.default,o=new b.default,a=new b.default;for(let l of e)if(n().isArray(l.relatedFiles)&&l.relatedFiles.length>0){const e=this.processMultiFile(l);e.parent=t,t.items.push(e)}else n().includes(l.importAsFormats,"API")?t.items.push(new b.default({file:l,parent:t,name:l.name})):n().includes(l.importAsFormats,"Collection")?s.items.push(new b.default({file:l,parent:s,name:l.name})):n().includes(l.importAsFormats,"Environment")?i.items.push(new b.default({file:l,parent:i,name:l.name})):n().includes(l.importAsFormats,"Globals")?o.items.push(new b.default({file:l,parent:o,name:l.name})):a.items.push(new b.default({file:l,parent:a,name:l.name}));this.setState({apis:t,collections:s,environments:i,globals:o,others:a,searchableEntities:[...t.items,...s.items,...i.items,...o.items,...a.items,...this.state.searchableEntities],isLoading:!1})})),(0,r.when)((()=>this.props.controller.shouldCloseTab),(()=>this.handleClose()))}processMultiFile(e){const t=new Map;this.assignToFolder(e,t,true,!(!e.candidateRootFiles||!e.candidateRootFiles[e.path]));for(let s of e.relatedFiles)this.assignToFolder(s,t,true,!(!e.candidateRootFiles||!e.candidateRootFiles[s.path]));const s=t.get("/");s.entityMap=t,s.file=e,s.name=e.name,s.isMultiFile=!0,s.relatedFiles=e.relatedFiles,s.candidateRootFiles=e.candidateRootFiles,(e=t.has("/"+e.path)?t.get("/"+e.path):t.get(e.path)).setIsRoot(!0);const i=this.pruneFolders(s);return n().includes(["proto2","proto3"],n().get(s,"file.format.id"))&&(s.candidateRootFiles&&0!==Object.keys(s.candidateRootFiles).length?this.setSelectedForRootDepencies(i):e.setIsRoot(!1)),i}setSelectedForRootDepencies(e){let t=[];e.candidateRootFiles[e.file.path]&&e.candidateRootFiles[e.file.path].relatedFiles?t=e.candidateRootFiles[e.file.path].relatedFiles:e.candidateRootFiles[e.file.fullPath]&&e.candidateRootFiles[e.file.fullPath].relatedFiles&&(t=e.candidateRootFiles[e.file.fullPath].relatedFiles),t.forEach((t=>{e.entityMap.has("/"+t)?e.entityMap.get("/"+t).setIsSelected(!0):e.entityMap.get(t).setIsSelected(!0)}))}pruneFolders(e){var t;const s=e;let i="";for(;e&&"folder"===e.kind&&1==n().size(e.items)&&"folder"===e.items[0].kind;)i=e.path,e=e.items[0];e.entityMap=s.entityMap,e.file=s.file,e.name=s.name,e.isMultiFile=!0,e.relatedFiles=s.relatedFiles,e.candidateRootFiles=s.candidateRootFiles,i="/"===i?i:i+"/";for(let t of e.entityMap.values())0===t.path.search(i)&&(t.fullPath=t.path,t.path=t.path.replace(i,""));0===(null===(t=e.file)||void 0===t?void 0:t.path.search(i))&&(e.file.fullPath=e.file.path,e.file.path=e.file.path.replace(i,""));for(let t of e.relatedFiles)0===t.path.search(i)&&(t.path=t.path.replace(i,""));return e}handleClose(){c.default.close({id:this.props.id}),(0,d.logApiDesignAnalytics)({category:d.EVENT_CATEGORIES.IMPORT,action:d.EVENT_ACTIONS.IMPORT_ENTITIES_TAB_CANCEL_CLICK_GCOPSLOG}),(0,d.logApiDesignAnalytics)({category:d.EVENT_CATEGORIES.IMPORT,action:d.EVENT_ACTIONS.IMPORT_ENTITIES_TAB_CANCEL_CLICK_IMPORTCOUNTLOG})}async handleImport(){h.Ampli.importModalImportClicked((0,h.getAmpliCTAProperties)(R));let e=!1;this.setState({isImporting:!0}),pm.mediator.once("resolveImportConflict",(()=>e=!0)),this.props.controller.subscribeToWorkspaceForAllAPIs();const t=await this.getConfigurationsForAPIEntity();let s=[...n().get(this.state,"collections.items",[]),...n().get(this.state,"environments.items",[]),...n().get(this.state,"globals.items",[]),...n().get(this.state,"others.items",[])],i=await(0,m.importNonAPIEntities)(n().filter(s,(e=>e.isSelected))),{apisToImport:o,importedAPIs:a}=await(0,m.importAPIs)(this.state.apis,{value:"unclassified"},t),l=[],r=[];n().forEach(a,((e,t)=>{l.push({apiId:null==e?void 0:e.id,apiVersionId:n().get(e,"versions[0].id"),name:n().get(o,`[${t}].name`),relationType:"apiDefinition",relationInfo:"Definition",relationName:n().get(o,`[${t}].format.name`),status:"processing"}),n().includes(p.GENERATE_COLLECTION_DISABLED_FORMATS,n().get(o,`[${t}].format.id`))||l.push({apiId:null==e?void 0:e.id,apiVersionId:n().get(e,"versions[0].id"),name:n().get(o,`[${t}].name`),relationType:"unclassified",relationName:"Postman Collection v2.1",status:"processing"})})),this.props.controller._setImportedAPIElements(l),n().forEach(s,((e,t)=>{var s,o;const a=i[t],l=n().head(n().keys(a.value)),c="fulfilled"===a.status&&n().get(a,["value",l,"imported"])?"completed":"failed";r.push({type:O,name:null==e?void 0:e.name,relationName:null==e||null===(s=e.file)||void 0===s||null===(o=s.format)||void 0===o?void 0:o.name,status:c})})),this.props.controller._setImportedNonAPIElements(r);let c=0,u=0;if(c+=o.length,u+=a.length,n().forEach(i,(e=>{c+=e.total,u+=e.imported})),this.setState({initialImportCompleted:!0}),(0,d.logApiDesignAnalytics)({category:d.EVENT_CATEGORIES.IMPORT,action:d.EVENT_ACTIONS.IMPORT_ENTITIES_TAB_IMPORT_CLICK_IMPORTCOUNTLOG,label:`totalEntitiesToImport:${c};totalImportedEntities:${u}`}),(0,d.logApiDesignAnalytics)({category:d.EVENT_CATEGORIES.IMPORT,action:d.EVENT_ACTIONS.IMPORT_ENTITIES_TAB_IMPORT_CLICK_GCOPSLOG}),c>0&&0===u&&!e)return pm.toasts.error("Import failed. Try again."),void this.setState({isImporting:!1});c.length>0&&0===o.length?this.handleClose():(0===this.props.controller.importedAPIElements.length&&this.props.controller.navigateToImportComplete(),this.setState({isImporting:!1}))}handleSearch(e){this.setState({searchText:e}),e&&"string"==typeof e?(e=n().lowerCase(e),n().forEach(this.state.searchableEntities,(e=>{e.setVisibility(!1)})),n().forEach(this.state.searchableEntities,(t=>{n().includes(n().lowerCase(t.name),e)&&t.setVisibility(!0,!0)}))):n().forEach(this.state.searchableEntities,(e=>{e.setVisibility(!0),e.setExpanded(!1)}))}shouldDisableImport(){const e=["apis","collections","environments","globals","others"];for(let t of e)if(n().get(this.state,`${t}.items`).length>0&&n().get(this.state,`${t}.isSelected`))return!1;return!0}render(){if(this.state.isLoading)return a.createElement("div",{className:"import-container-loading"},a.createElement(g.default,null));if(this.state.initialImportCompleted){this.props.controller.areAllElementsImported&&this.props.controller.isTabActive()&&this.props.controller.navigateToImportComplete();let e,t=n().filter(this.props.controller.importedAPIElements,(e=>"processing"!==this.props.controller.getImportStatusFromEvents(e.apiId,e.relationType)));return t=n().concat(t,n().filter(this.props.controller.importedNonAPIElements,(e=>"processing"!==e.status))),e=this.props.controller.importedAPIElements.length+this.props.controller.importedNonAPIElements.length-t.length,0===e&&this.props.controller.isTabActive()&&this.props.controller.navigateToImportComplete(),a.createElement("div",{className:"import-container-main"},a.createElement("div",{className:"import-container-progress"},a.createElement("h2",null,"Import in progress"),a.createElement("div",{className:"import-container-progress-content"},n().map(t,((e,t)=>{const s=e.type===O&&e.status||this.props.controller.getImportStatusFromEvents(e.apiId,e.relationType);return a.createElement("div",{className:"import-container-progress-content-item",key:`${t}`},"completed"===s?a.createElement(T.default,{className:"import-container-progress-content-item-icon",color:"content-color-success"}):a.createElement(y.default,{className:"import-container-progress-content-item-icon",color:"content-color-error"}),a.createElement("div",{className:"import-container-progress-content-item-data"},a.createElement(E.default,{color:"content-color-primary"},e.name),a.createElement(E.default,{color:"content-color-secondary"},"  ·  "),a.createElement(E.default,{color:"content-color-secondary"},e.relationName),e.relationInfo&&a.createElement(a.Fragment,null,a.createElement(E.default,{color:"content-color-secondary"},"  ·  "),a.createElement(E.default,{color:"content-color-secondary"},e.relationInfo))))})),!this.props.controller.areAllElementsImported&&a.createElement("div",{className:"import-container-progress-content-summary"},a.createElement(g.default,{className:"import-container-progress-content-summary-spinner",size:"small"}),a.createElement("div",{className:"import-container-progress-content-summary-data"},a.createElement(E.default,{color:"content-color-primary"},`${e} ${0!==t.length?"more":""} ${e>1?"elements are":"element is"} being imported.`)))),a.createElement("div",{className:"import-container-progress-footer"},a.createElement(E.default,{color:"content-color-secondary"},"You can close this tab and get back to other tasks. ",a.createElement("br",null),"We’ll let you know once import is complete."))))}return a.createElement("div",{className:"import-container-main"},a.createElement("div",{className:"import-container-content element-table-height-fill"},a.createElement("h2",null,"Import Elements"),a.createElement("div",{className:"import-search-input"},a.createElement(I.default,{type:"text",value:this.state.searchText,onChange:e=>this.handleSearch(e.target.value),placeholder:"Search files and folders",width:"40%",prefix:a.createElement(C.default,null)})),a.createElement("div",{className:"element-table-overflow-scroll"},this.state.apis&&this.state.apis.items.length>0?a.createElement(A.default,{title:"APIs",columnLeft:"API name",columnRight:"API type",fileList:this.state.apis,setInitialOptionPreference:e=>{this.setState({optionsPreference:e})},optionsPreference:this.state.optionsPreference,setOptionsPreference:(e,t)=>this.setState({optionsPreference:{...this.state.optionsPreference,[e]:t}}),isImporting:this.state.isImporting,isAPI:!0}):null,this.state.collections&&this.state.collections.items.length>0?a.createElement(A.default,{title:"Collections",columnLeft:"Collection Name",columnRight:"Format",fileList:this.state.collections,isImporting:this.state.isImporting,addGap:!0}):null,this.state.environments&&this.state.environments.items.length>0?a.createElement(A.default,{title:"Environments",columnLeft:"Environment Name",columnRight:"Format",fileList:this.state.environments,isImporting:this.state.isImporting,addGap:!0}):null,this.state.globals&&this.state.globals.items.length>0?a.createElement(A.default,{title:"Globals",columnLeft:"Name",columnRight:"Format",fileList:this.state.globals,isImporting:this.state.isImporting,addGap:!0}):null,this.state.others&&this.state.others.items.length>0?a.createElement(A.default,{title:"Requests",columnLeft:"Name",columnRight:"Format",fileList:this.state.others,isImporting:this.state.isImporting,addGap:!0}):null),a.createElement("div",{className:"import-container-footer"},a.createElement("div",{className:"import-container-footer_import_button"},a.createElement(v.default,{type:"primary",text:"Import",isDisabled:this.shouldDisableImport()||!(0,f.resolveStoreInstance)(u.default).isSocketConnected,onClick:this.handleImport.bind(this),isLoading:this.state.isImporting})),a.createElement("div",{className:"import-container-footer_cancel_button"},a.createElement(v.default,{type:"secondary",text:"Cancel",isDisabled:this.state.isImporting,onClick:this.handleClose.bind(this)})))))}})||i}}]);